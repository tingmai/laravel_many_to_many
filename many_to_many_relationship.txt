user table

Schema::create('users', function (Blueprint $table) {
        $table->id(); 
        $tabe->string('name');
	$table->string('email');
        $table->string('password');
        $table->string('user_type');
        $table->timestamps();
    });

role table
Schema::create('role', function (Blueprint $table) {
        $table->id();  
        $table->string('name');
        $table->timestamps();
    });

php artisan make:migration create_users_roles_table --create=users_roles

public function up()
    {
        Schema::create('users_roles', function (Blueprint $table) {
            $table->id();
            $table->unsignedBiginteger('user_id');
            $table->unsignedBiginteger('role_id');


            $table->foreign('user_id')->references('id')
                 ->on('role')->onDelete('cascade');
            $table->foreign('role_id')->references('id')
                ->on('user')->onDelete('cascade');
        });
    }


User.php
(User Model)
 public function roles()
    {
        return $this->belongsToMany(Role::class);
    }


Role.php
(Role Model)
   public function users()
    {
        return $this->belongsToMany(User::class);
    }



 public function store(Request $request)
    {
        $roles  = ["admin","stock","sale"];

        $user = new User();
        $user->name = $request->name;
        $user->email = $request->email;
        $user->save();

        $user->roles()->attach($roles);
       
        
        return redirect()->route('users.index');
    }



 public function update(Request $request, $id)
    {
        $roles= ["stock", "sale"];
        $user = User::find($id);
        $user->roles()->sync($roles);
    }